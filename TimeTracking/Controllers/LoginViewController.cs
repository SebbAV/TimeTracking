// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using UIKit;
using Firebase.Auth;

namespace TimeTracking
{
	public partial class LoginViewController : UIViewController
	{
        public LoginViewController (IntPtr handle) : base (handle) {}
        public override void ViewDidLoad()
        {
            base.ViewDidLoad();
            btnLogin.TouchUpInside += BtnLogin_TouchUpInside;

      }

        void BtnLogin_TouchUpInside(object sender, EventArgs e) => Auth.DefaultInstance.SignIn(lblUser.Text, lblPassword.Text, HandleAuthResultHandler);

        void HandleAuthResultHandler(User user, NSError error)
        {
            if (error != null)
            {
                AuthErrorCode errorCode;
                if (IntPtr.Size == 8) // 64 bits devices
                    errorCode = (AuthErrorCode)((long)error.Code);
                else // 32 bits devices
                    errorCode = (AuthErrorCode)((int)error.Code);

                // Posible error codes that SignIn method with email and password could throw
                // Visit https://firebase.google.com/docs/auth/ios/errors for more information
                switch (errorCode)
                {
                    case AuthErrorCode.OperationNotAllowed:
                        break;
                    case AuthErrorCode.InvalidEmail:
                        CallAlert("Wrong Email", "Please check that your Email is correct");
                        break;
                    case AuthErrorCode.UserDisabled:
                        CallAlert("Invalid Account", "Please contact your system administrator if you believe this is in error");
                        break;
                    case AuthErrorCode.WrongPassword:
                        CallAlert("Wrong Password", "Please check that your password is correct");
                        break;
                        
                    default:
                        CallAlert("Error", "Please check your Email address");
                        break;
                }
              
            }
            else {
                PerformSegue("LoginSegue", null);
            }

        }
        void CallAlert(string title, string message){
            var alert = UIAlertController.Create(title, message, UIAlertControllerStyle.Alert);
            alert.AddAction(UIAlertAction.Create("Ok", UIAlertActionStyle.Default, null));
            PresentViewController(alert, true, null);
        }

	}
}
